{% set srcSchName = node.location.name %}
{% set db = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='database') | first %}
{% set sch = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='schema') | first %}

{% set stageStorageLocationName = config.stageStorageLocationName %}
{% set dbStage = stageStorageLocationName | selectattr('name', 'equalto', srcSchName) | map(attribute='database') | first %}

{% set schStage = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='schema') | first %}
{% set ns = namespace(counter=1) %}


{%- if config.filePattern | length > 0 -%} 
    {%- set filePatternSQL = 'PATTERN = ' + config.filePattern -%} 
{%- else -%}
    {%- set filePatternSQL = "" -%} 
{%- endif -%}

{%- if config.fileNames | length > 0 %} 
    {% set fileNameSQL = 'FILES = (' + config.fileNames + ')' %} 
{%- else -%}
    {% set fileNameSQL = "" %} 
{% endif %}

{% if parameters.loadType != 'Reload' %}

    {{ stage('Copy Into') }}
        COPY INTO "{{ db }}"."{{ sch }}"."{{ node.name }}" (
            {{stageStorageLocationName}}

            {%- for col in sources[0].dependencies[0].columns %}
                "{{ col.name }}",  
            {%- endfor %}
            {%- for col in columns %}
                "{{ col.name }}"
            {%- if not loop.last -%}, {% endif %}
            {%- endfor %}
        )
        FROM (SELECT
            {%- for col in sources[0].dependencies[0].columns %}
                 ${{ ns.counter}}::{{ col.dataType}},  
                 {% set ns.counter = ns.counter + 1 %} 
            {%- endfor %}
            {%- for col in sources[0].columns %}
                {{ col.transform }}
            {%- if not loop.last -%}, {% endif %}
            {%- endfor %}
            FROM '@{{ dbStage }}.{{ schStage }}.{{ config.stageName }}') 
        {{- fileNameSQL }}
        {{ filePatternSQL }}
        FILE_FORMAT = (FORMAT_NAME = '{{ db }}.{{ sch }}.{{ config.fileFormatName}}')

{%- else -%}
    {{ stage('Truncate Target Table') }}
    TRUNCATE TABLE IF EXISTS "{{ db }}"."{{ sch }}"."{{ node.name }}"

    {{ stage('Copy Into Force') }}
        COPY INTO "{{ db }}"."{{ sch }}"."{{ node.name }}" (
            {%- for col in columns %}
                "{{ col.name }}"
            {%- if not loop.last -%}, {% endif %}
            {%- endfor %}
        )
        FROM (SELECT
            {%- for col in sources[0].dependencies[0].columns %}
                {{ col.name }},    
            {%- endfor %}
            {%- for col in sources[0].columns %}
                {{ col.transform }}
            {%- if not loop.last -%}, {% endif %}
            {%- endfor %}
            FROM '@{{ db }}.{{ sch }}.{{ config.stageName }}') 
        {{- fileNameSQL }}
        {{ filePatternSQL }}
        FILE_FORMAT = (FORMAT_NAME = '{{ db }}.{{ sch }}.{{ config.fileFormatName}}')
        FORCE = TRUE

{% endif %}