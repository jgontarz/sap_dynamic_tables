{% set udtfName = node.name %}
{% set udtfStrLoc = config.udtfLocation %}
{% set udtfDb = storageLocations | selectattr('name', 'equalto', udtfStrLoc) | map(attribute='database') | first %}
{% set udtfSch = storageLocations | selectattr('name', 'equalto', udtfStrLoc) | map(attribute='schema') | first %}

{% set fqUdtfName = '"' + udtfDb + '"."' + udtfSch + '"."' + udtfName + '"' %}

{{ stage('Create Python Parse Excel SP') }}
CREATE OR REPLACE FUNCTION {{ fqUdtfName }} (file_path string, array_name string)
RETURNS TABLE (src variant)
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('snowflake-snowpark-python')
HANDLER = 'jsonparser'
AS
$$
from snowflake.snowpark.files import SnowflakeFile
import json
 
class jsonparser:
 def process(self, stagefile, array_name):
     with SnowflakeFile.open(stagefile, 'rb') as f:
         json_data = json.load(f)
        
         for item in json_data[array_name]:
             try:
                 yield (item, )
             except:
                 pass
$$;