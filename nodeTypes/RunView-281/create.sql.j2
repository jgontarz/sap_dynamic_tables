{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Run View  == #}
{# == Node Type Description    : This node creates a view and also runs override create sql for view.Also uses a parameter to select the sources to load the target view  == #}


{% if desiredState == currentState %}

{{ stage('No Changes') }}
select 1 = 0

{% elif desiredState %}

{# Override CreateSQL for view #}

    {% if desiredState.node.override.create.enabled %}
            
        {{ desiredState.node.override.create.script }}

    {% else %}

{# CreateSQL for view #}

        {{ stage('Create View') }}
        CREATE OR REPLACE VIEW {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
        (
            {% for col in desiredState.columns %}
                "{{ col.name }}"
                {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
                {%- if not loop.last -%}, {% endif %}
            {% endfor %}
        )
        {%- if desiredState.node.description | length > 0 %} COMMENT = '{{ desiredState.node.description | escape }}'{% endif %}
        AS
        {% for source in desiredState.sources %}
            SELECT {% if desiredState.config.selectDistinct %} DISTINCT {% endif %}
            {% for col in source.columns %}
                {{ get_source_transform(col) }} AS "{{ col.name }}"
                {%- if not loop.last -%}, {% endif %}
            {% endfor %}

            {{ source.join }}

            {% if not loop.last %}
                {% if desiredState.config.insertStrategy in ['UNION', 'UNION ALL'] %}
                    {{ desiredState.config.insertStrategy }}
                {% else %}
                    UNION
                {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}

{% elif currentState != undefined and desiredState == undefined %}

    {# View Name #}

    {% set targetViewDatabase = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[0] %} 
    {% set targetViewSchema = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[1] %} 
    {% set fullyQualifiedTargetViewName = ref_no_link(currentState.node.location.name, currentState.node.name) %}

    {{ stage('Drop View', true, "sql", "drop") }}
    DROP VIEW IF EXISTS {{ fullyQualifiedTargetViewName }}


{%- else -%}

{{ stage('Unknown State') }}
select 1 = 0

{% endif %}
